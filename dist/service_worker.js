(()=>{"use strict";function e(e,n){return`https://filtru.xyz/extension-render/${e}?r=CivaNCZHcuk5xYBgtyOV0xtIeIr6CqNyB0caQ6o3R8hGChszeIVOWebXi2T4dJRYGBWrrhU1bvjPvEFkJRCUOkNDjdAuzb39${n}`}function n(e,n){fetch(`https://filtru.xyz/api/account/stats/update/${e}/add/${n}`).then((e=>e.json())).then((e=>(console.log(e),e)))}chrome.runtime.onInstalled.addListener((async n=>{"install"==n.reason&&chrome.tabs.create({url:e("installed")})})),chrome.tabs.onUpdated.addListener((function(t,o,s){o.url&&chrome.tabs.query({active:!0,lastFocusedWindow:!0},(function(t){var o,s=t[0];try{let t=new URL(s.url);t=t.hostname,o=t,fetch("https://raw.githubusercontent.com/DestroyPorn/NSFW-Websites/main/Lists/simple-list.json").then((e=>e.json())).then((t=>{var s=o.toString().split(".").reverse().splice(0,2).reverse().join(".");if(t.domains.includes(s))return n("stat_WebsitesBlocked",1),void chrome.tabs.query({active:!0},(function(n){chrome.tabs.update(n[0].id,{url:e("website-blocked",`&type=porn&domain=${o}`)})}))})),function(t,o){console.log(t),console.log(o);var s=["porn","sex","hentai","loli","bang","fuck","squirt","onlyfans"," ph ","pron","the hub","masturbation"," fap ","blowing","blowjob","blow job","handjob","hand job"];o.includes("&FILTRUIGNORESEARCHENGINEBLOCKED=true")||["www.google","bing.com","duckduckgo.com","you.com"].forEach((c=>{t.includes(c)&&(console.log("seach engine"),s.forEach((s=>{o.includes(s)&&(chrome.tabs.query({active:!0},(function(n){chrome.tabs.update(n[0].id,{url:e("search-engine-blocked",`&type=nsfw&domain=${t}&url=${o}&keyword=${s}`)})})),n("stat_WebsitesBlocked",1))})))}))}(t,s.url)}catch(e){}}))})),chrome.runtime.onMessageExternal.addListener((async function(e,n,t){if(e.extensionInstalled)try{t("true"),console.log("h")}catch(e){console.log(e)}if(e.greeting)try{t("ok"),console.log(e.greeting)}catch(e){console.log(e),t(e)}})),chrome.runtime.onMessage.addListener((async function(e,t,o){t.tab&&e.FILTRU_scanImage&&(n("stat_NsfwContentScanned","1"),console.log(e.FILTRU_scanImage))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,